
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.bxtel.webservice.dxgz;

import java.util.logging.Logger;

import javax.annotation.Resource;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import com.bxtel.bxdatadxgzdg.bo.BxDataDxGzDgTBO;
import com.bxtel.bxdatadxgzdg.model.BxDataDxGzDgT;
import com.bxtel.exception.BusinessException;

/**
 * This class was generated by Apache CXF 2.7.11
 * 2014-06-18T15:22:54.990+08:00
 * Generated source version: 2.7.11
 * 
 * 贵州电信厂商 刘
	18908180955
	我们是爱易惠
	
	-----------------------------
	刘华生
	佳都新太科技股份有限公司
	通信事业部
	Mobile：18908180955
	MSN:liuhsgz@hotmail.com
	QQ:119591049
	Email:lhs@pci-suntektech.com
	-----------------------------

 * 
 */

@javax.jws.WebService(
                      serviceName = "SpInterfaceService",
                      portName = "spInterfacePort",
                      targetNamespace = "http://www.suntektech.com",
                      wsdlLocation = "http://114.135.113.20:8889/SpInterface?wsdl",
                      endpointInterface = "com.bxtel.webservice.dxgz.SpInterface")
                      
public class SpInterfaceImpl implements SpInterface {

	
	@Resource
	public BxDataDxGzDgTBO  bo;
	
	
    private static final Logger LOG = Logger.getLogger(SpInterfaceImpl.class.getName());
    
    
    /* (non-Javadoc)
     * @see com.bxtel.webservice.dxgz.SpInterface#refreshUserOrder(com.bxtel.webservice.dxgz.UserOrderModel  userOrder )*
     */
    public com.bxtel.webservice.dxgz.SyncSPUserResult refreshUserOrder(UserOrderModel userOrder) { 
        LOG.info("Executing operation refreshUserOrder");
        System.out.println(userOrder);
        com.bxtel.webservice.dxgz.SyncSPUserResult _return=new com.bxtel.webservice.dxgz.SyncSPUserResult() ;
        if(userOrder.getCommandID().equals("10000"))
        {
        	 _return.setCommandID("10005");
        }else  if(userOrder.getCommandID().equals("10010"))
        {
        	 _return.setCommandID("10015");
        }else  if(userOrder.getCommandID().equals("20000"))
        {	
        	 _return.setCommandID("20005");
        }
        else  if(userOrder.getCommandID().equals("20010"))
        {
        	 _return.setCommandID("20015");
        }else  if(userOrder.getCommandID().equals("30000"))
        {
       	 	 _return.setCommandID("30005");
        }
        else{
        	 _return.setCommandID(userOrder.getCommandID());
        }
        
        _return.setSequenceNo(userOrder.getSequenceNo());
        try {
        	
        	BxDataDxGzDgT model=new BxDataDxGzDgT();
    		try {
    		     model.setServiceid(userOrder.getServiceID());
    			 model.setCommandid(userOrder.getCommandID());
    			 model.setSequenceno(userOrder.getSequenceNo());
    			 model.setSubmdn(userOrder.getSubMDN());
    			 model.setUsername(userOrder.getUSERNAME());
    			 model.setPwd(userOrder.getPASSWORD());
    			 model.setStarttime(userOrder.getSTARTTIME());
    			 model.setValidtime(userOrder.getVALIDTIME());
    			 model.setFactory(userOrder.getFACTORY());
    			 model.setPkg(userOrder.getPACKAGE());
    			 model.setPpflag(userOrder.getPPFlag());
    			 model.setOcs(userOrder.getOCS());
    			 model.setOrdno(userOrder.getORDNO());
    			 model.setReserved(userOrder.getRESERVED());
    			 bo.add(model);
    			_return.setResultContent("");
    	        _return.setResult("0");
    		} catch (BusinessException e) {
    			e.printStackTrace();
    			_return.setResultContent("");
    	        _return.setResult("0");
    		}
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
    
    /* (non-Javadoc)
     * @see com.bxtel.webservice.dxgz.SpInterface#refreshUserInfo(com.bxtel.webservice.dxgz.RefreshUserInfoRequest  refreshUserInfoRequest )*
     */
    public com.bxtel.webservice.dxgz.Result refreshUserInfo(RefreshUserInfoRequest refreshUserInfoRequest) { 
        LOG.info("Executing operation refreshUserInfo");
        System.out.println(refreshUserInfoRequest);
        try {
            com.bxtel.webservice.dxgz.Result _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.bxtel.webservice.dxgz.SpInterface#syncSPUserList(com.bxtel.webservice.dxgz.SPUserModel  spUser )*
     */
    public com.bxtel.webservice.dxgz.SyncSPUserResult syncSPUserList(SPUserModel spUser) { 
        LOG.info("Executing operation syncSPUserList");
        System.out.println(spUser);
        try {
            com.bxtel.webservice.dxgz.SyncSPUserResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.bxtel.webservice.dxgz.SpInterface#queryUserOrder(com.bxtel.webservice.dxgz.UserInfo  userInfo )*
     */
    public com.bxtel.webservice.dxgz.UserOrderInfoArray queryUserOrder(UserInfo userInfo) { 
        LOG.info("Executing operation queryUserOrder");
        System.out.println(userInfo);
        try {
            com.bxtel.webservice.dxgz.UserOrderInfoArray _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.bxtel.webservice.dxgz.SpInterface#authenSPUser(com.bxtel.webservice.dxgz.AuthenSPUserModel  authenInfo )*
     */
    public com.bxtel.webservice.dxgz.AuthenSPUserResult authenSPUser(AuthenSPUserModel authenInfo) { 
        LOG.info("Executing operation authenSPUser");
        System.out.println(authenInfo);
        try {
            com.bxtel.webservice.dxgz.AuthenSPUserResult _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

   

}
